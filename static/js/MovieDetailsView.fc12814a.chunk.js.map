{"version":3,"sources":["services/movies-api.js","Components/Container/Container.js","Components/Container/Container.module.css","Components/Button/Button.js","Components/Button/Button.module.css","images/defaultImg.png","views/MovieDetailsView/MovieDetailsView.module.css","views/MovieDetailsView/MovieDetailsView.js"],"names":["BASE_URL","API_KEY","fetchWihtErrorHandling","a","url","config","fetch","respons","ok","json","Promise","reject","console","log","fetchMoviesTrending","fetchMoviesById","movieId","fetchMoviesCast","fetchMoviesReviews","fetchMoviesByName","searchQuery","Container","title","children","className","s","container","module","exports","Button","onClick","type","button","CastView","lazy","ReviewsView","MovieDetailsView","useState","movie","setMovie","status","setStatus","useRouteMatch","path","useParams","location","useLocation","history","useHistory","useEffect","moviesAPI","then","data","catch","error","warn","window","localStorage","setItem","JSON","stringify","state","from","pathname","srcImgById","poster_path","defaultImg","userScore","vote_average","yearReleseMovie","release_date","slice","genresMovie","genres","map","genre","name","join","push","parse","getItem","containerMovie","src","display","alt","description","original_title","overview","information","to","link","activeClassName","activeLink","fallback"],"mappings":"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","file":"static/js/MovieDetailsView.fc12814a.chunk.js","sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"37ddbc320f48fcbb375faaee253d2760\";\n\nasync function fetchWihtErrorHandling(url = \"\", config = {}) {\n  const respons = await fetch(url, config);\n\n  return respons.ok\n    ? await respons.json()\n    : Promise.reject(console.log(\"Not found\"));\n  // : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchMoviesTrending() {\n  return fetchWihtErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMoviesById({ movieId }) {\n  return fetchWihtErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n\nexport function fetchMoviesCast({ movieId }) {\n  return fetchWihtErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMoviesReviews({ movieId }) {\n  return fetchWihtErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMoviesByName({ searchQuery }) {\n  return fetchWihtErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&include_adult=false`\n  );\n}\n\n","import PropTypes from \"prop-types\";\nimport s from \"../Container/Container.module.css\";\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      <h2> {title}</h2>\n\n      {children}\n    </div>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Mr8N\"};","import PropTypes from \"prop-types\";\n\nimport s from \"../Button/Button.module.css\";\n\nfunction Button({ onClick, children, type }) {\n  return (\n    <button type={type || \"button\"} className={s.button} onClick={onClick}>\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.object,\n  type: PropTypes.string,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__GITcU\"};","export default __webpack_public_path__ + \"static/media/defaultImg.337d8096.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMovie\":\"MovieDetailsView_containerMovie__3UVIM\",\"description\":\"MovieDetailsView_description__nbgEa\",\"link\":\"MovieDetailsView_link__2eZww\",\"activeLink\":\"MovieDetailsView_activeLink__W7R7A\",\"information\":\"MovieDetailsView_information__nKVy2\"};","import React, { useState, useEffect } from \"react\";\nimport { lazy, Suspense } from \"react\";\n\nimport {\n  NavLink,\n  useRouteMatch,\n  useParams,\n  useLocation,\n  useHistory,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport Container from \"../../Components/Container/Container\";\nimport Button from \"../../Components/Button/Button\";\nimport { RiArrowGoBackLine } from \"react-icons/ri\";\n\nimport * as moviesAPI from \"../../services/movies-api\";\nimport defaultImg from \"../../images/defaultImg.png\";\nimport s from \"../MovieDetailsView/MovieDetailsView.module.css\";\n\nconst CastView = lazy(() =>\n  import(\"../CastView/CastView.js\" /*webpackChunkName:\"CastView\" */)\n);\nconst ReviewsView = lazy(() =>\n  import(\"../ReviewsView/ReviewsView.js\" /*webpackChunkName:\"ReviewsView\" */)\n);\n\n\n\nfunction MovieDetailsView() {\n\n    const [movie, setMovie] = useState(null);   \n    const [status, setStatus] = useState(\"idle\");   \n\n    const { url, path } = useRouteMatch();\n    const { movieId } = useParams();\n    const location = useLocation();    \n    const history = useHistory();\n    \n\n    useEffect(() => {\n        \n        setStatus(\"pending\");        \n\n        if (movieId !== []) {\n        \n            moviesAPI          \n                .fetchMoviesById({ movieId })\n                .then((data) => {            \n                    return (setMovie(data),\n                        setStatus(\"resolved\")\n                    );\n                })                \n                .catch((error) => console.warn(error));           \n        }        \n        return setStatus(\"rejected\");        \n    }, [movieId]);\n    \n    \n\n    useEffect(() => {      \n        window.localStorage.setItem(\"urlFrom\", JSON.stringify(location.state.from.pathname));\n    }, []);\n    \n\n    const onGoBack = () => {        \n\n        if (!location.state) {\n            history.push(location?.state?.from ?? \"/\")\n        }\n        else\n            history.push(JSON.parse(window.localStorage.getItem('urlFrom')))\n        \n    }        \n  \n    if (status === \"resolved\") {   \n       \n        const srcImgById = movie.poster_path\n            ? `http://image.tmdb.org/t/p/w200${movie.poster_path}`\n            : defaultImg;\n        \n        const userScore = movie.vote_average * 10;\n        const yearReleseMovie = movie.release_date.slice(0, 4) || '19..';\n        const genresMovie = movie.genres.map((genre) => genre.name).join(\"  \");\n\n        return (\n        <Container>\n            <Button onClick={onGoBack} children={<RiArrowGoBackLine />}></Button>\n\n            <div className={s.containerMovie}>\n            <img src={srcImgById} display=\"inline-block\" alt={movie.title} />\n\n            <div className={s.description}>\n                <h2>{movie.original_title}</h2>\n                <span>({yearReleseMovie})</span>\n\n                <p>\n                User score<span> {userScore} %</span>\n                </p>\n\n                <h4>Overview</h4>\n\n                <span> {movie.overview}</span>\n\n                <h4>Genres</h4>\n\n                <p>{genresMovie}</p>\n            </div>\n            </div>\n\n            <div className={s.information}>\n            <p>Additional information</p>\n\n            <NavLink            \n                to={{\n                pathname: `${url}/cast`,\n                state: { from: location },\n                }}\n                className={s.link}\n                activeClassName={s.activeLink}\n            >\n                Cast\n            </NavLink>\n\n            <NavLink\n            \n                to={{\n                pathname: `${url}/reviews`,\n                state: { from: location },\n                }}\n                className={s.link}\n                activeClassName={s.activeLink}\n            >\n                Reviews\n            </NavLink>\n\n            <Suspense fallback={<div>Loading.....</div>}>\n                <Switch>\n                <Route path={`${path}/cast`}>\n                    <CastView />\n                </Route>\n\n                <Route path={`${path}/reviews`}>\n                    <ReviewsView />\n                </Route>\n                </Switch>\n            </Suspense>\n            </div>\n        </Container>\n        );\n    }\n    return <p>Please, wait</p>\n}\n\nexport default MovieDetailsView;\n"],"sourceRoot":""}